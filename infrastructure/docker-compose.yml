version: "3.8" # docker-compose version: 3.8

services:
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile
    container_name: health-advisor-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      API_PREFIX: /api
      MONGODB_URI: mongodb://mongodb:27017/health-advisor
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 1h
      REFRESH_TOKEN_EXPIRATION: 7d
      LLM_PROVIDER_API_KEY: ${LLM_PROVIDER_API_KEY}
      LLM_PROVIDER_URL: https://api.openai.com/v1
      LLM_MODEL: gpt-4
      CORS_ORIGIN: "*"
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX: 100
      LOG_LEVEL: info
    depends_on:
      - mongodb
    networks:
      - health_advisor_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  mongodb:
    image: mongo:6.0 # mongodb version: 6.0
    container_name: health-advisor-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - health_advisor_network
    command: mongod --logpath=/dev/null
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest # prometheus version: latest
    container_name: health-advisor-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../infrastructure/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../infrastructure/monitoring/prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - health_advisor_network
    depends_on:
      - backend
      - mongodb-exporter
      - node-exporter
      - cadvisor

  grafana:
    image: grafana/grafana:latest # grafana version: latest
    container_name: health-advisor-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ../infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - health_advisor_network
    depends_on:
      - prometheus

  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: health-advisor-mongodb-exporter
    restart: unless-stopped
    ports:
      - "9216:9216"
    command:
      - "--mongodb.uri=mongodb://mongodb:27017"
    networks:
      - health_advisor_network
    depends_on:
      - mongodb

  node-exporter:
    image: prom/node-exporter:latest
    container_name: health-advisor-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - health_advisor_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: health-advisor-cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - health_advisor_network

volumes:
  mongodb_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  health_advisor_network:
    driver: bridge