name: Mobile Build

on:
  push:
    branches: [main]
    paths: ['src/web/**']
  pull_request:
    branches: [main]
    paths: ['src/web/**']

env:
  NODE_VERSION: '16.x'
  JAVA_VERSION: '11'
  RUBY_VERSION: '2.7'
  COVERAGE_THRESHOLD: '80'
  ANDROID_SDK_TOOLS: '7583922'

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/web/package-lock.json'

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Lint code
        working-directory: src/web
        run: npm run lint

      - name: Type check
        working-directory: src/web
        run: npm run typecheck

      - name: Run unit tests
        working-directory: src/web
        run: npm test -- --coverage

      - name: Check test coverage
        working-directory: src/web
        run: |
          npx jest --coverage --coverageThreshold='{"global":{"lines":${{ env.COVERAGE_THRESHOLD }},"functions":${{ env.COVERAGE_THRESHOLD }},"branches":${{ env.COVERAGE_THRESHOLD }},"statements":${{ env.COVERAGE_THRESHOLD }}}}'

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: src/web/coverage

  build-android:
    name: Build Android
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/web/package-lock.json'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            src/web/android/.gradle
            src/web/android/app/build
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate version code
        id: version
        run: echo "version=$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Update version in build.gradle
        working-directory: src/web/android/app
        run: sed -i "s/versionName \"1.0\"/versionName \"${{ steps.version.outputs.version }}\"/g" build.gradle

      - name: Build Android Release
        working-directory: src/web
        run: npm run build:android

      - name: Sign APK
        working-directory: src/web/android/app
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > release.keystore
          $ANDROID_HOME/build-tools/33.0.0/apksigner sign --ks release.keystore --ks-pass pass:"${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" --key-pass pass:"${{ secrets.ANDROID_KEY_PASSWORD }}" --ks-key-alias "${{ secrets.ANDROID_KEY_ALIAS }}" --out app-release-signed.apk build/outputs/apk/release/app-release-unsigned.apk
          mv app-release-signed.apk build/outputs/apk/release/app-release.apk

      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: src/web/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS
    needs: lint-and-test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'src/web/package-lock.json'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install dependencies
        working-directory: src/web
        run: npm ci

      - name: Install CocoaPods
        working-directory: src/web/ios
        run: pod install

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: src/web/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Generate version code
        id: version
        run: echo "version=$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

      - name: Update version in Info.plist
        working-directory: src/web/ios/HealthAdvisor
        run: /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ steps.version.outputs.version }}" Info.plist

      - name: Install Apple certificates
        working-directory: src/web/ios
        run: |
          echo "${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_BASE64 }}" | base64 --decode > distribution.p12
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import distribution.p12 -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -A
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain

      - name: Build iOS Release
        working-directory: src/web/ios
        run: |
          xcodebuild -workspace HealthAdvisor.xcworkspace -scheme HealthAdvisor -configuration Release -archivePath HealthAdvisor.xcarchive archive CODE_SIGN_IDENTITY="iPhone Distribution" PROVISIONING_PROFILE_SPECIFIER="HealthAdvisorDistribution"
          xcodebuild -exportArchive -archivePath HealthAdvisor.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ./build

      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: src/web/ios/build/HealthAdvisor.ipa