name: Mobile Deploy

on:
  workflow_run:
    workflows: [Mobile Build]
    branches: [main]
    types: [completed]

env:
  RUBY_VERSION: '2.7'
  FASTLANE_VERSION: '2.212.1'
  ANDROID_PACKAGE_NAME: 'com.healthadvisor'
  IOS_BUNDLE_ID: 'com.healthadvisor'
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

jobs:
  prepare-deployment:
    name: Prepare Deployment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: app-release
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          path: android-build

      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: ios-build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          path: ios-build

      - name: Get version info
        id: version
        run: echo "version=$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

    outputs:
      version: ${{ steps.version.outputs.version }}

  deploy-android-internal:
    name: Deploy Android to Internal Testing
    needs: prepare-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane -v ${{ env.FASTLANE_VERSION }}

      - name: Setup Google Play credentials
        run: echo '${{ secrets.GOOGLE_PLAY_JSON_KEY }}' > google-play-key.json

      - name: Deploy to Google Play Internal Testing
        working-directory: src/web/android
        run: fastlane internal_testing apk:../../android-build/app-release.apk version:${{ needs.prepare-deployment.outputs.version }}
        env:
          GOOGLE_PLAY_JSON_KEY_FILE: '../../google-play-key.json'
          ANDROID_PACKAGE_NAME: ${{ env.ANDROID_PACKAGE_NAME }}

  deploy-ios-testflight:
    name: Deploy iOS to TestFlight
    needs: prepare-deployment
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane -v ${{ env.FASTLANE_VERSION }}

      - name: Setup App Store Connect API Key
        run: echo '${{ secrets.APP_STORE_CONNECT_API_KEY }}' > app-store-connect-key.json

      - name: Deploy to TestFlight
        working-directory: src/web/ios
        run: fastlane beta ipa:../../ios-build/HealthAdvisor.ipa version:${{ needs.prepare-deployment.outputs.version }}
        env:
          APP_STORE_CONNECT_API_KEY_PATH: '../../app-store-connect-key.json'
          APPLE_TEAM_ID: ${{ env.APPLE_TEAM_ID }}
          IOS_BUNDLE_ID: ${{ env.IOS_BUNDLE_ID }}

  deploy-android-production:
    name: Deploy Android to Production
    needs: [prepare-deployment, deploy-android-internal]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane -v ${{ env.FASTLANE_VERSION }}

      - name: Setup Google Play credentials
        run: echo '${{ secrets.GOOGLE_PLAY_JSON_KEY }}' > google-play-key.json

      - name: Deploy to Google Play Production
        working-directory: src/web/android
        run: fastlane production apk:../../android-build/app-release.apk version:${{ needs.prepare-deployment.outputs.version }}
        env:
          GOOGLE_PLAY_JSON_KEY_FILE: '../../google-play-key.json'
          ANDROID_PACKAGE_NAME: ${{ env.ANDROID_PACKAGE_NAME }}

  deploy-ios-production:
    name: Deploy iOS to App Store
    needs: [prepare-deployment, deploy-ios-testflight]
    runs-on: macos-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane -v ${{ env.FASTLANE_VERSION }}

      - name: Setup App Store Connect API Key
        run: echo '${{ secrets.APP_STORE_CONNECT_API_KEY }}' > app-store-connect-key.json

      - name: Deploy to App Store
        working-directory: src/web/ios
        run: fastlane release ipa:../../ios-build/HealthAdvisor.ipa version:${{ needs.prepare-deployment.outputs.version }}
        env:
          APP_STORE_CONNECT_API_KEY_PATH: '../../app-store-connect-key.json'
          APPLE_TEAM_ID: ${{ env.APPLE_TEAM_ID }}
          IOS_BUNDLE_ID: ${{ env.IOS_BUNDLE_ID }}

  post-deployment:
    name: Post-Deployment Tasks
    needs: [deploy-android-production, deploy-ios-production]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create deployment tag
        run: "git tag mobile-deployment-$(date +'%Y%m%d%H%M%S') && git push --tags"

      - name: Notify deployment success
        run: 'curl -X POST -H "Content-Type: application/json" -d ''{"text":"Mobile app deployment successful: ${{ needs.prepare-deployment.outputs.version }}"}'' ${{ secrets.SLACK_WEBHOOK_URL }}'